"""
This is a module for testing the add_integer function.
"""

>>> add_integer = __import__('0-add_integer').add_integer

# Basic addition of two positive integers
>>> add_integer(1, 1)
2

# Addition with one positive and one negative integer
>>> add_integer(2, -1)
1

# Addition of two negative integers
>>> add_integer(-2, -1)
-3

# Addition of two floats, cast to integers
>>> add_integer(1.1, 2.1)
3

# Addition of an integer and a float, cast to integers
>>> add_integer(1, 2.1)
3

# OverflowError when first argument is float infinity
>>> add_integer(float('inf'), 1)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

# TypeError when first argument is a string
>>> add_integer('Holberton', 1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Addition with default second argument (98)
>>> add_integer(1)
99

# TypeError when first argument is None
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# ValueError when first argument is NaN
>>> add_integer(float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

# TypeError when first argument is a list
>>> add_integer([1, 2, 3], 1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Addition with negative float and positive integer
>>> add_integer(-1.1, 1)
0

# Addition with negative float and negative integer
>>> add_integer(-1.1, -1)
-2

